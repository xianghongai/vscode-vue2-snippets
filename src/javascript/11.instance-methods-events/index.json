{
	"Vue: this.$emit()": {
		"prefix": [
			"this.$emit()",
			"vm.$emit()",
			"emit"
		],
		"body": [
			"${5:this}.\\$emit('${2:event-name}'${3:, ${4:param}});$0"
		],
		"description": "Trigger an event on the current instance. Any additional arguments will be passed into the listener’s callback function.\n `vm.$emit(eventName, […args])`\n"
	},
	"Vue: this.$on()": {
		"prefix": [
			"this.$on()_UNSAFE",
			"vm.$on()_UNSAFE"
		],
		"body": [
			"${1:this}.\\$on('${2:event-name}', ${3:listener});$0"
		],
		"description": "Listen for a custom event on the current vm. Events can be triggered by vm.$emit. The callback will receive all the additional arguments passed into these event-triggering methods.\n `vm.$on(event, callback)`\nVue 3.x removed.\n"
	},
	"Vue: this.$once()": {
		"prefix": [
			"this.$once()_UNSAFE",
			"vm.$once()_UNSAFE"
		],
		"body": [
			"${1:this}.\\$once('${2:event-name}', ${3:listener});$0"
		],
		"description": "Listen for a custom event, but only once. The listener will be removed once it triggers for the first time.\n `vm.$once(event, callback)`\nVue 3.x removed.\n"
	},
	"Vue: this.$off()": {
		"prefix": [
			"this.$off()_UNSAFE",
			"vm.$off()_UNSAFE"
		],
		"body": [
			"${1:this}.\\$off($2);$0"
		],
		"description": "Remove custom event listener(s).\n 1. If no arguments are provided, remove all event listeners;\n 2. If only the event is provided, remove all listeners for that event;\n 3. If both event and callback are given, remove the listener for that specific callback only.\n `vm.$off([event, callback])`\nVue 3.x removed.\n"
	}
}
