{
	"Class binding: object syntax inline": {
		"prefix": "vClass",
		"body": [
			":class=\"{ ${1:'${2:class-name}'}: ${3:expression} }\"$0"
		],
		"description": "Object Syntax.\nThe class will be determined by the truthiness of the data property.\nExample: `v-bind:class=\"{ active: isActive }\"`"
	},
	"Class binding: object syntax": {
		"prefix": "vClass",
		"body": [":class=\"${1:classObject}\"$0"],
		"description": "Object Syntax.\nBind to a data/computed property that returns an object.\nExample:\n<div v-bind:class=\"classObject\"></div>\n\nData Property:\n\ndata() { \n  return { \n    classObject: { \n      active: true, \n      'text-danger': false \n    } \n  } \n}\n\nComputed Property:\n\ncomputed: { \n  classObject () { \n    return { \n      active: this.isActive && !this.error, \n      'text-danger': this.error && this.error.type === 'fatal' \n    } \n  } \n}"
	},
	"Class binding: apply a list of classes": {
		"prefix": "vClass",
		"body": [":class=\"[${1:classObject}]\"$0"],
		"description": "Array Syntax"
	},
	"Class binding: with a ternary expression": {
		"prefix": "vClass",
		"body": [
			":class=\"[${1:${2:expression} ? '${3:class-name}' : '$4'}, ${5:classObject}]\"$0"
		],
		"description": "Array Syntax"
	},
	"Class binding: multiple conditional classes": {
		"prefix": "vClass",
		"body": [
			":class=\"[${1:classObject}, { ${2:'${3:class-name}'}: ${4:expression} }]\"$0"
		],
		"description": "Array Syntax"
	},
	"Style binding: object syntax inline": {
		"prefix": "vStyle",
		"body": [
			":style=\"{ ${1:'${2:css-property}'}: ${3:'value'}${4:, ${5:cssProperty}: ${6:`\\${${7:styleValue}\\}px`}} }\"$0"
		],
		"description": "Object Syntax.use either camelCase or kebab-case (use quotes with kebab-case) for the CSS property names\n\nExample:\n<div v-bind:style=\"{ color: activeColor, fontSize: fontSize + 'px' }\"></div>"
	},
	"Style binding: object syntax": {
		"prefix": "vStyle",
		"body": [":style=\"${1:styleObject}\"$0"],
		"description": "Object Syntax.\nBind to a data/computed property that returns an object.\nExample:\n<div v-bind:style=\"styleObject\"></div>\n\nData Property:\n\ndata() { \n  return { \n    styleObject: { \n      color: 'red', \n      'font-size': '16px' \n    } \n  } \n}"
	},
	"Style binding: multiple styles": {
		"prefix": "vStyle",
		"body": [
			":style=\"[${1:baseStyles}, ${2:overridingStyles}]\"$0"
		],
		"description": "Array Syntax.\nbind multiple styles using the array option"
	}
}
